--lets look at our data set
SELECT * FROM avo LIMIT 10;
--our first colomn called unnamed is irrelevant so it will be deleted. 
PRAGMA foreign_keys = 0;

CREATE TABLE sqlitestudio_temp_table AS SELECT *
                                          FROM avo;

DROP TABLE avo;

CREATE TABLE avo (
    Date,
    AveragePrice,
    [Total Volume],
    [4046],
    [4225],
    [4770],
    [Total Bags],
    [Small Bags],
    [Large Bags],
    [XLarge Bags],
    type,
    year,
    region
);

INSERT INTO avo (
                    Date,
                    AveragePrice,
                    [Total Volume],
                    [4046],
                    [4225],
                    [4770],
                    [Total Bags],
                    [Small Bags],
                    [Large Bags],
                    [XLarge Bags],
                    type,
                    year,
                    region
                )
                SELECT Date,
                       AveragePrice,
                       "Total Volume",
                       "4046",
                       "4225",
                       "4770",
                       "Total Bags",
                       "Small Bags",
                       "Large Bags",
                       "XLarge Bags",
                       type,
                       year,
                       region
                  FROM sqlitestudio_temp_table;

DROP TABLE sqlitestudio_temp_table;

PRAGMA foreign_keys = 1;

SELECT * FROM avo LIMIT 10;
-- year is being shown with decimals. lets fix that --> Convert "year" column to integer
UPDATE avo
SET year = CAST(year AS INTEGER);
SELECT * FROM avo LIMIT 10;
-- check for missing values
SELECT * FROM avo
WHERE 
    (SELECT COUNT(*) FROM pragma_table_info('avo') WHERE "notnull" = 0) > 0;
    
--Q1: what is the average price of avocados over the entire dataset? 
SELECT AVG(AveragePrice) AS Average_Price FROM avo;
-- A: 1.32704568645941

--Q2: What is the total volume of avocados sold for each year? & Which year had the highest total volume of avocados sold?
SELECT year, SUM(COALESCE("Total Volume", 0)) AS Total_Volume
FROM avo
GROUP BY year;
-- A: 2015 had the highest total volume of avocados sold at 288,385,982,801 avocados.

--Q3: What is the average price difference between conventional and organic avocados?
SELECT type, AVG(AveragePrice) AS Average_Price FROM avo GROUP BY type;
-- A: Conventional - 1.11153566555994 organic - 1.53059410331162

-- Q4 : Which region had the highest average price for avocados in a specific year?
SELECT year, Region, MAX(AveragePrice) AS Highest_Average_Price FROM avo GROUP BY year, Region;
-- A: Miami (fort lauderdale) had the highest average price of avocados charging at $3.09 back in 2014. 

-- Q4a : Regions with the highest average price for avocados in 2018 and after
SELECT year, Region, AVG(AveragePrice) AS Avg_Price
FROM avo
WHERE year >= 2018
GROUP BY year, Region
ORDER BY year DESC, Avg_Price DESC
LIMIT 1;
--A: albany at an avg price of 1.474

-- Q4b : Regions with the highest average price for avocados in 2017
SELECT year, Region, AVG(AveragePrice) AS Avg_Price
FROM avo
WHERE year = 2017
GROUP BY year, Region
ORDER BY Avg_Price DESC
LIMIT 1;
-- A: Syracuse at an avg price of 1.547

-- Q5: What is the average price per avocado for each PLU code (4046, 4225, 4770)?
SELECT
  '4046' AS PLU,
  AVG(AveragePrice) AS Average_Price
FROM avo
UNION
SELECT
  '4225' AS PLU,
  AVG(AveragePrice) AS Average_Price
FROM avo
UNION
SELECT
  '4770' AS PLU,
  AVG(AveragePrice) AS Average_Price
FROM avo;
-- A: 4046: 1.32704568645941   4225: 1.32704568645941      4770: 1.32704568645941

-- Q6: What is the percentage distribution of each avocado type (conventional or organic) over the entire dataset?
SELECT type, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM avo) AS Percentage FROM avo GROUP BY type;
-- A: conventional: 48.5728%  organic: 51.4272% 

-- Q7: What is the overall trend in avocado prices over the years?
SELECT year, AVG(AveragePrice) AS AvgPrice
FROM avo
GROUP BY year
ORDER BY year;
-- A: prices are decreasing year over year

-- Q8: lets see the percentage decrease in price by year: 
SELECT year, 
  AVG(AveragePrice) AS AvgPrice,
  LAG(AVG(AveragePrice)) OVER (ORDER BY year) AS PrevAvgPrice,
  ((AVG(AveragePrice) - LAG(AVG(AveragePrice)) OVER (ORDER BY year)) / LAG(AVG(AveragePrice)) OVER (ORDER BY year)) * 100 AS PriceIncreasePercentage
FROM avo
GROUP BY year
ORDER BY year;
-- A: prices from 2014 to 2015 decreased by 4.54% then by 2.65% in 2016 and prices only slightly decreased in 2017 at a -0.7% change. 
--    Finally in 2018 prices went down by 2% 

